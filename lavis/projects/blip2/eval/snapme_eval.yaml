 # Copyright (c) 2022, salesforce.com, inc.
 # All rights reserved.
 # SPDX-License-Identifier: BSD-3-Clause
 # For full license text, see the LICENSE file in the repo root or https://opensource.org/licenses/BSD-3-Clause

# Overall Accuracy is: 43.98
model:
  arch: blip2_vicuna_instruct
  model_type: vicuna7b
  use_grad_checkpoint: False
  load_pretrained: True ##
  load_finetuned: False
  finetuned: "/nfs_share2/code/donghee/LAVIS/lavis/output/BLIP2/Pretrain_stage2/20230930023/checkpoint_best.pth" ## 
  max_txt_len: 30
  
  ingr_layer: True ##
  quantity_layer: False
  
  ## ingr only: /nfs_share2/code/donghee/LAVIS/lavis/output/BLIP2/Pretrain_stage2/20230525102/checkpoint_4.pth
  ## finetuned: /nfs_share2/code/donghee/LAVIS/lavis/output/BLIP2/Pretrain_stage2/20230516075/checkpoint_9.pth
  ## from scratch: /nfs_share2/code/donghee/LAVIS/lavis/output/BLIP2/Pretrain_stage2/20230515184/checkpoint_9.pth

datasets:
  SNAPMe: 
      vis_processor:
        train:
          name: "blip2_image_train"
          image_size: 224
        eval:
          name: "blip_image_eval"
          image_size: 224

      text_processor:
        train:
          name: "blip_question"
          prompt: "This is a food made with " ## TODO
        eval:
          name: "blip_question"
          prompt: "This is a food made with " ## TODO

  # gqa: # name of the dataset builder
  #   type: balanced_testdev
  #   vis_processor:
  #       eval:
  #         name: "blip_image_eval"
  #         image_size: 224
  #   text_processor:
  #       eval:
  #         name: "blip_question"
  #   build_info:
  #       images:
  #           storage: "/export/share/datasets/vision/GQA/images/"

run:
  task: vqa ## captioning
  # optimization-specific
  batch_size_train: 5 ## 32
  batch_size_eval: 5 ## 16
  num_workers: 4

  # inference-specific
  max_len: 30
  min_len: 1
  num_beams: 5
  # inference_method: "generate"
  prompt: "Question: What are the ingredients I need to make this food? Answer:"

  seed: 42
  output_dir: "output/BLIP2/Eval"

  evaluate: True
  train_splits: ["train"]
  valid_splits: ["eval"]
  test_splits: ["test"] ##

  # distribution-specific
  device: "cuda"
  world_size: 1 ##
  dist_url: "env://"
  distributed: True
